package com.example.accessingdatamysql.controller;

import com.example.accessingdatamysql.model.Customer;
import com.example.accessingdatamysql.model.Product;
import com.example.accessingdatamysql.model.Transaction;
import com.example.accessingdatamysql.repository.CustomerRepository;
import com.example.accessingdatamysql.repository.ProductRepository;
import com.example.accessingdatamysql.repository.TransactionRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/customer") // This means URL's start with /customer (after Application path)
public class CustomerController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private CustomerRepository customerRepository;

    @GetMapping(path = "/all-with-zip-code")
    public @ResponseBody
    Iterable<Customer> getAllUsersWithZipcode(  @RequestParam String zipcode) {
        // already implemented by spring
        return customerRepository.findAllByZipcode(zipcode);
    }


    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<Customer> getAllUsers() {
        // This returns a JSON or XML with the users
        // already implemented by spring
        return customerRepository.findAll();
    }


    // Insert customer info to the customer table
    @PostMapping(path = "/add") // Map ONLY POST Requests
    public @ResponseBody
    String addNewCustomer(
            @RequestParam String firstName,
            @RequestParam String lastName,
            @RequestParam String zipcode,
            @RequestParam String email) {
        System.out.println("firstName = " + firstName);
        System.out.println("lastName = " + lastName);
        System.out.println("zipcode = " + zipcode);
        System.out.println("email = " + email);
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        Customer n = new Customer();
        n.setFirstName(firstName);
        n.setLastName(lastName);
        n.setZipcode(zipcode);
        n.setEmail(email);
        // already implemented by spring
        customerRepository.save(n);
        System.out.println(" saved ");
        return "User Saved";
    }

    @DeleteMapping(path = "/delete")
    public @ResponseBody
    String deleteUserById(@RequestParam int id) {
        // already implemented by spring
        customerRepository.deleteById(id);
        return "deleted";
    }


}